<Controls:MetroWindow x:Class="FlagSync.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:FlagSync.View"
        xmlns:properties="clr-namespace:FlagSync.View.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        d:DesignHeight="768" d:DesignWidth="1024"
        Title="FlagSync" Icon="/FlagSync;component/Images/ApplicationIcon.ico"
        WindowState="Maximized" Closing="Window_Closing"
        MinWidth="800" MinHeight="600"
        Loaded="Window_Loaded">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding Path=ProgressState}" ProgressValue="{Binding Path=TotalProgressPercentageSmall}" />
    </Window.TaskbarItemInfo>
    <Window.DataContext>
        <local:MainWindowViewModel x:Name="mainWindowViewModel" x:FieldModifier="private" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:ByteToKiloByteConverter x:Key="ByteToKiloByteConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Border BorderBrush="Black" Background="Silver">
                                <Grid x:Name="PART_Track">
                                    <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left">
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsAborted}" Value="True">
                                                        <Setter Property="Fill" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=IsAborted}" Value="False">
                                                        <Setter Property="Fill" Value="#FF01D328" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="UpDownButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Rectangle x:Name="border" StrokeThickness="1.5" Stroke="White" Fill="White" />
                                <Grid>
                                    <Label Margin="2" Padding="2" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="StrokeThickness" Value="0" />
                                    <Setter TargetName="border" Property="Fill" Value="Gainsboro" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="border" Property="StrokeThickness" Value="2" />
                                    <Setter TargetName="border" Property="Stroke" Value="CornflowerBlue" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="StrokeThickness" Value="0" />
                                    <Setter TargetName="border" Property="Fill" Value="Silver" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Background="#FFF0F0F0">
            <MenuItem Header="{x:Static properties:Resources.ProgramMenuItemText}">
                <MenuItem Header="{x:Static properties:Resources.LanguageMenuItemText}">
                    <MenuItem Header="{x:Static properties:Resources.EnglishString}" Click="englishMenuItem_Click" />
                    <MenuItem Header="{x:Static properties:Resources.GermanString}" Click="germanMenuItem_Click" />
                </MenuItem>
                <MenuItem Header="{x:Static properties:Resources.ExitMenuItemText}" Command="{Binding Path=ExitApplicationCommand}" />
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.HelpMenuItemText}">
                <MenuItem Header="{x:Static properties:Resources.AboutString}" Click="aboutMenuItem_Click" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" Margin="5, 10, 5, 5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" Header="{x:Static properties:Resources.CurrentJobGroupBoxText}" Padding="3">
                <Grid>
                    <Grid VerticalAlignment="Center" Visibility="{Binding Path=IsRunning, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static properties:Resources.NameTextBlockText}"  FontWeight="Bold"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Path=CurrentJob.Name}" Margin="10,0,0,0" />
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static properties:Resources.DirectoryATextBlockText}" FontWeight="Bold" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=CurrentJob.DirectoryA}" Margin="10,0,0,0" />
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static properties:Resources.DirectoryBTextBlockText}" FontWeight="Bold" />
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Path=CurrentJob.DirectoryB}" Margin="10,0,0,0" />
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static properties:Resources.ModeTextBlockText}" FontWeight="Bold" />
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Path=CurrentJob.SyncModeString}" Margin="10,0,0,0" />
                    </Grid>
                    <TextBlock FontWeight="Bold" Text="{x:Static properties:Resources.NoActiveJobText}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                       </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Column="1" Header="{x:Static properties:Resources.ControlPanelGroupBoxText}" Padding="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <ProgressBar Height="20" Maximum="{Binding Path=CountedBytes, Converter={StaticResource ByteToKiloByteConverter}, UpdateSourceTrigger=PropertyChanged}" Value="{Binding Path=ProceededBytes, Mode=OneWay, Converter={StaticResource ByteToKiloByteConverter}, UpdateSourceTrigger=PropertyChanged}" IsIndeterminate="{Binding Path=IsCounting, UpdateSourceTrigger=PropertyChanged}" Minimum="0" />
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Text="{x:Static properties:Resources.TotalProgressText}"/>
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding Path=TotalProgressPercentage, StringFormat=\{0:F\}%}" />
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding Path=AverageSpeed, StringFormat=@ \{0\}}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsPreview, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsCounting, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsDeleting, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsPaused, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="1" Margin="0, 3">
                        <ProgressBar Height="20" Value="{Binding Path=CurrentProgress, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
                            <TextBlock Text="{x:Static properties:Resources.CurrentProgressText}"/>
                            <TextBlock Text=" " />
                            <TextBlock Text="{Binding Path=CurrentProgress, UpdateSourceTrigger=PropertyChanged, FallbackValue=0, StringFormat=\{0\}%}" />
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Content="{x:Static properties:Resources.PreviewButtonText}" Margin="0, 0, 5, 0" Command="{Binding Path=StartJobWorkerCommand}" CommandParameter="true" />
                        <Button Grid.Column="1" Content="{x:Static properties:Resources.StartButtonText}" Margin="5, 0, 5, 0" Command="{Binding Path=StartJobWorkerCommand}" CommandParameter="false" />
                        <Button Grid.Column="2" Margin="5, 0, 5, 0" Command="{Binding Path=PauseOrContinueJobWorkerCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsPaused}" Value="True">
                                            <Setter Property="Content" Value="{x:Static properties:Resources.ContinueString}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsPaused}" Value="False">
                                            <Setter Property="Content" Value="{x:Static properties:Resources.PauseString}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="3" Content="{x:Static properties:Resources.StopButtonText}" Margin="5, 0, 0, 0" Command="{Binding Path=StopJobWorkerCommand}" />
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
        <TabControl Grid.Row="2" Margin="5, 0, 5, 5" SelectedIndex="{Binding Path=TabIndex, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
            <TabItem Header="Settings">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Margin="0, 5, 5, 5" ToolTip="{x:Static properties:Resources.NewJobButtonText}" Command="{Binding Path=AddNewJobSettingCommand}">
                                <Button.Content>
                                    <StackPanel>
                                        <Image Source="/FlagSync;component/Images/Add.png" Width="50" Height="50" />
                                        <ContentPresenter Content="{x:Static properties:Resources.NewString}" HorizontalAlignment="Center" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="1" Margin="5" ToolTip="{x:Static properties:Resources.DeleteJobButtonText}" Command="{Binding Path=DeleteSelectedJobSettingCommand}">
                                <StackPanel>
                                    <Image Source="/FlagSync;component/Images/Remove.png" Width="50" Height="50" />
                                    <ContentPresenter Content="{x:Static properties:Resources.DeleteString}" HorizontalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="2" Margin="5" ToolTip="{x:Static properties:Resources.LoadJobsButtonText}" Click="loadJobsButton_Click">
                                <StackPanel>
                                    <Image Source="/FlagSync;component/Images/Load.png" Width="50" Height="50" />
                                    <ContentPresenter Content="{x:Static properties:Resources.LoadString}" HorizontalAlignment="Center" />
                                </StackPanel>
                            </Button>
                            <Button Grid.Column="3" Margin="5, 5, 0, 5" ToolTip="{x:Static properties:Resources.SaveJobsButtonText}" Click="saveJobsButton_Click">
                                <StackPanel>
                                    <Image Source="/FlagSync;component/Images/Save.png" Width="50" Height="50" />
                                    <ContentPresenter Content="{x:Static properties:Resources.SaveString}" HorizontalAlignment="Center" />
                                </StackPanel>
                            </Button>
                        </Grid>
                        <ListBox Grid.Row="1" SelectedItem="{Binding Path=SelectedJobSetting, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=JobSettings, UpdateSourceTrigger=PropertyChanged}" Margin="0,10,0,0">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <StackPanel Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem, AncestorLevel=1}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding ElementName=mainWindowViewModel}">
                                            <Button Style="{StaticResource UpDownButtonStyle}" Height="20" Width="20" Padding="0" Margin="1" Command="{Binding Path=MoveSelectedJobSettingUpCommand}">
                                                <Image Source="/FlagSync;component/Images/UpArrow.png" />
                                            </Button>
                                            <Button Style="{StaticResource UpDownButtonStyle}" Height="20" Width="20" Padding="0" Margin="1" Command="{Binding Path=MoveSelectedJobSettingDownCommand}">
                                                <Image Source="/FlagSync;component/Images/DownArrow.png" />
                                            </Button>
                                        </StackPanel>
                                        <CheckBox Margin="5, 0, 0, 0" IsChecked="{Binding Path=IsIncluded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />
                                        <Grid Margin="10, 0, 0, 0" VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Static properties:Resources.ListBoxItemJobNameText}" FontWeight="Bold" Foreground="Green" />
                                            <TextBlock Grid.Column="0" Grid.Row="1" Text="{x:Static properties:Resources.ListBoxItemJobTypeText}" FontWeight="Bold" />
                                            <TextBlock Grid.Column="1" Grid.Row="0" Margin="5, 0, 0, 0" Text="{Binding Path=Name}" Foreground="#FFFF6700" FontWeight="Bold" />
                                            <TextBlock Grid.Column="1" Grid.Row="1" Margin="5, 0, 0, 0" Text="{Binding Path=SyncModeString}" />
                                        </Grid>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <TextBlock Grid.Row="1" Text="{x:Static properties:Resources.NoJobText}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" FontWeight="Bold" FontStyle="Normal" Visibility="{Binding Path=HasNoJobs, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap" MaxWidth="150" />
                    </Grid>
                    <ItemsControl Grid.Column="1" ItemsSource="{Binding Path=CurrentJobSettingsPanel, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </TabItem>
            <TabItem Header="Log">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" Text="{Binding Path=StatusMessages, UpdateSourceTrigger=PropertyChanged, IsAsync=True, Mode=OneWay}" IsReadOnly="True" TextChanged="TextBox_TextChanged" Cursor="Arrow" />
                    <ListView Grid.Row="1" ItemsSource="{Binding Path=LogMessages, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" SelectionChanged="ListView_SelectionChanged" SelectedIndex="{Binding Path=LastLogMessageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" SelectionMode="Single">
                        <ListView.View>
                            <GridView AllowsColumnReorder="False">
                                <GridViewColumn Width="30">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Path=Image}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static properties:Resources.ActionGridViewColumnText}" Width="75">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Action}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static properties:Resources.TypeGridViewColumnText}" Width="75">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Type}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static properties:Resources.FileSizeGridViewColumnText}" Width="75">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=FileSize}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static properties:Resources.SourceGridViewColumnText}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=SourcePath}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{x:Static properties:Resources.TargetGridViewColumnText}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=TargetPath}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="3" Width="Auto" Height="25">
            <StatusBarItem Content="{Binding Path=LastStatusMessage}" />
            <StatusBarItem Visibility="{Binding Path=IsNewVersionAvailable, Converter={StaticResource BooleanToVisibilityConverter}, IsAsync=True, Mode=OneTime, FallbackValue=Hidden}" HorizontalAlignment="Right">
                <Hyperlink NavigateUri="http://sourceforge.net/projects/flagsync/files/" RequestNavigate="Hyperlink_RequestNavigate">
                    <TextBlock Text="{x:Static properties:Resources.UpdateAvailableText}" />
                </Hyperlink>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Controls:MetroWindow>